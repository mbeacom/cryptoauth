{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AACA,+CAA6E;AAE7E,qBAA4B,OAAwB;IAChD,cAAc,CAAC,OAAO,CAAC,CAAC;IACxB,MAAM,CAAC,sCAAuB,EAAE,IAAI,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACnE,CAAC;AAHD,kCAGC;AAED;IACI,MAAM,CAAC,sCAAuB,EAAE,CAAC;AACrC,CAAC;AAFD,wDAEC;AAED,2BAAkC,OAAwB;IACtD,cAAc,CAAC,OAAO,CAAC,CAAC;IACxB,MAAM,CAAC,iCAAkB,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC;AAHD,8CAGC;AAED,wBAAwB,OAAwB;IAC5C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACX,MAAM,2CAA2C,CAAC;IACtD,CAAC;IAED,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAClB,MAAM,6CAA6C,CAAC;IACxD,CAAC;AACL,CAAC","sourcesContent":["import { ProviderOptions } from './types';\nimport { initDappBrowserProvider, initPortisProvider } from './initializers';\n\nexport function getProvider(options: ProviderOptions) {\n    isValidOptions(options);\n    return initDappBrowserProvider() || getPortisProvider(options);\n}\n\nexport function getDappBrowserProvider() {\n    return initDappBrowserProvider();\n}\n\nexport function getPortisProvider(options: ProviderOptions) {\n    isValidOptions(options);\n    return initPortisProvider(options);\n}\n\nfunction isValidOptions(options: ProviderOptions) {\n    if (!options) {\n        throw '[cryptoauth] `options` object is required';\n    }\n\n    if (!options.portis) {\n        throw '[cryptoauth] `portis` parameter is required';\n    }\n}\n"]}